"use strict";
const thisIsConstant = "Okay this is const and you can't change it";
console.log(thisIsConstant);

/*
Дженерики это - тип данных который может быть чем угодно (как простым так и сложным)
Nan - not a numbre 
Как таковых констант в JS не существует. Лучшее всего использовать константы для хранения данных.
То что представленно ниже это своего рода массив который можно доставать по индексу. 
document.write() - это функция для считывания данных от пользователя
use strict - это правило которое необхоимо использовать для строго режима, т.е в этом режиме надо объявлять
переменную по правилам let this = " ", а не без думно писать this = " ", по этому лучше использовать строгий режим
как правильно писать указан на первой строке!!
Сущетвует 8 типов данных  их можно разделить на 2 класса. 

Простые типы данных: 
1. int - числа (есть не большое но мы не можем выйти за рамки числа 2^52 (два в пятьдесят второй степени))
2. string - строки
3. boolean - логические типы True - False (правда или ложь)
4. null - это пустота т.е ничего нет 
5. undefind - это тип в котором ничего нет но он есть (аналогия с холодильником есть холодильник, но внутри ничего нет)
6. Symbol - новый тип данных (добавлен в ES6)
7. Bigint - это тип данных которые описывают большие числа 

Объекты: 
Объекты в свою очередь делятся на две подкатегории спецальные объекты и обычные объекты.

Спец.объекты 
1. Array[] (массивы) - это комплексный тип данный, грубо говоря это списки которые могут содержать как и int так и str. 
Массив это частный случай объекта и это не отдельный вид объекта! 
Массивы нужны для того что бы элементы находились строго по порядку. 
2. Function (функции) -
3. Object data - 
4. Regular expression (обычные выражения) - 
5. Erorr (ошибки) - 

Объект это комплексный тип данных в котором может сожержаться что угодно, в объект можно добавить еще один объект,
массив в котором будет объект!
Пример: 
(для того что бы достать что нибудь из объекта указываем название объекта и свойства объекта 
(это все что вложенно в объект) 
Выглядит так:
    obj.name
    obj.lastName и т.д и т.п)

const obj = {
    name: "Doniyor",
    lastName: "Kuzybaev",
    secondName: "Taxirovich"
}; 

Взаимодействие с юзером:
1. confirm() - задает вопрос пользователю и получаем ответ ввиде true & false
2. promt() - получает ответ от пользователя как это выглядит name = promot("вам есть 18?", "") -> не забывай отставлять,
кавычки для получения ответа. 
*/

const obj = {
    name: "Doniyor",
    lastName: "Kuzybaev",
    secondName: "Taxirovich"
}; 


let numbre = 2.5;


/*const objTwo = {
    thisName: "Barni",
    hisprot: "Dog",
    someThing: {
        lastNameTwo: "Khatamova",
        nameTwo: "Guzal"
    }
};
//console.log(objTwo.someThing.lastNameTwo, objTwo.someThing.nameTwo);
*/

const ansers = {
    name: " ",
    lastName: " ",
    age: ''
};

ansers.name = prompt('Ваше имя?');
ansers.lastName = prompt('Ваша фамилия?');
ansers.age = prompt('Ваш возраст?');

document.write(ansers.name, ansers.lastName, ansers.age);
